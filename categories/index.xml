<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Yang&#39;s Blog</title>
    <link>https://ericliu03.github.io/categories/</link>
    <description>Recent content on Yang&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 14 May 2019 11:23:20 -0700</lastBuildDate>
    
	<atom:link href="https://ericliu03.github.io/categories/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[Leetcode 560] Subarray Sum Equals K</title>
      <link>https://ericliu03.github.io/posts/2019/05/560_subarray_sum_equals_k/</link>
      <pubDate>Tue, 14 May 2019 11:23:20 -0700</pubDate>
      
      <guid>https://ericliu03.github.io/posts/2019/05/560_subarray_sum_equals_k/</guid>
      <description>Question Leetcode 560: Subarray Sum Equals K
Given an array of integers and an integer k, you need to find the total number of continuous subarrays whose sum equals to k.
Note:  The length of the array is in range [1, 20,000]. The range of numbers in the array is [-1000, 1000] and the range of the integer k is [-1e7, 1e7].  Examples Example 1:
Input:nums = [1,1,1], k = 2 Output: 2  Solution Method 1 (TLE) 我一开始想到的解法是使用一个存了dict的array，记录下每个位置上出现的所有可能的sum的数量。这样进行到每一位的时候只需要看一下他前面那个位置的dict，就能得到包含当前位置数字所有可能出现的sum。</description>
    </item>
    
    <item>
      <title>[Leetcode 975] Odd Even Jump</title>
      <link>https://ericliu03.github.io/posts/2019/05/lc_975_odd_even_jump/</link>
      <pubDate>Fri, 10 May 2019 09:59:57 -0700</pubDate>
      
      <guid>https://ericliu03.github.io/posts/2019/05/lc_975_odd_even_jump/</guid>
      <description>Question Leetcode 975: Odd Even Jump
You are given an integer array A. From some starting index, you can make a series of jumps. The (1st, 3rd, 5th, &amp;hellip;) jumps in the series are called odd numbered jumps, and the (2nd, 4th, 6th, &amp;hellip;) jumps in the series are called even numbered jumps.
You may from index i jump forward to index j (with i &amp;lt; j) in the following way:</description>
    </item>
    
    <item>
      <title>[Leetcode 714] Best Time to Buy and Sell Stock with Transaction Fee</title>
      <link>https://ericliu03.github.io/posts/2019/05/best_time_to_buy_sell_stock_with_fee/</link>
      <pubDate>Tue, 07 May 2019 10:53:59 -0700</pubDate>
      
      <guid>https://ericliu03.github.io/posts/2019/05/best_time_to_buy_sell_stock_with_fee/</guid>
      <description>Question Leetcode 714: Best Time to Buy and Sell Stock with Transaction Fee
Your are given an array of integers prices, for which the i-th element is the price of a given stock on day i; and a non-negative integer fee representing a transaction fee.
You may complete as many transactions as you like, but you need to pay the transaction fee for each transaction. You may not buy more than 1 share of a stock at a time (ie.</description>
    </item>
    
    <item>
      <title>[Leetcode 552] Student Attendance Record II</title>
      <link>https://ericliu03.github.io/posts/2019/05/student_attendance_record_ii/</link>
      <pubDate>Mon, 06 May 2019 10:54:57 -0700</pubDate>
      
      <guid>https://ericliu03.github.io/posts/2019/05/student_attendance_record_ii/</guid>
      <description>Question Leetcode 552: Student Attendance Record II
Given a positive integer n, return the number of all possible attendance records with length n, which will be regarded as rewardable. The answer may be very large, return it after mod 10^9 + 7.
A student attendance record is a string that only contains the following three characters:
 &amp;lsquo;A&amp;rsquo; : Absent. &amp;lsquo;L&amp;rsquo; : Late. &amp;lsquo;P&amp;rsquo; : Present.  A record is regarded as rewardable if it doesn&amp;rsquo;t contain more than one &#39;A&#39; (absent) or more than two continuous &#39;L&#39; (late).</description>
    </item>
    
    <item>
      <title>[Leetcode 1039] Minimum Score Triangulation of Polygon</title>
      <link>https://ericliu03.github.io/posts/2019/05/minimum_score_triangulation_of_polygon/</link>
      <pubDate>Sun, 05 May 2019 10:52:39 -0700</pubDate>
      
      <guid>https://ericliu03.github.io/posts/2019/05/minimum_score_triangulation_of_polygon/</guid>
      <description>Question Leetcode 1039: Minimum Score Triangulation of Polygon
Given N, consider a convex N-sided polygon with vertices labelled A[0], A[i], ..., A[N-1] in clockwise order.
Suppose you triangulate the polygon into N-2 triangles. For each triangle, the value of that triangle is the product of the labels of the vertices, and the total score of the triangulation is the sum of these values over all N-2 triangles in the triangulation.</description>
    </item>
    
  </channel>
</rss>
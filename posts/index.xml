<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Yang&#39;s Blog</title>
    <link>https://ericliu03.github.io/posts/</link>
    <description>Recent content in Posts on Yang&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 03 May 2019 16:22:13 -0700</lastBuildDate>
    
	<atom:link href="https://ericliu03.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Max Increase to Keep City Skyline</title>
      <link>https://ericliu03.github.io/posts/2019/05/max_increase_to_keep_city_skyline/</link>
      <pubDate>Fri, 03 May 2019 16:22:13 -0700</pubDate>
      
      <guid>https://ericliu03.github.io/posts/2019/05/max_increase_to_keep_city_skyline/</guid>
      <description>Question Leetcode 807: Max Increase to Keep City Skyline
In a 2 dimensional array grid, each value grid[i][j] represents the height of a building located there. We are allowed to increase the height of any number of buildings, by any amount (the amounts can be different for different buildings). Height 0 is considered to be a building as well.
At the end, the &amp;ldquo;skyline&amp;rdquo; when viewed from all four directions of the grid, i.</description>
    </item>
    
    <item>
      <title>K Empty Slots</title>
      <link>https://ericliu03.github.io/posts/2019/05/k_empty_slots/</link>
      <pubDate>Fri, 03 May 2019 14:09:47 -0700</pubDate>
      
      <guid>https://ericliu03.github.io/posts/2019/05/k_empty_slots/</guid>
      <description>Question Leetcode 683: K Empty Slots
There is a garden with N slots. In each slot, there is a flower. The N flowers will bloom one by one inN days. In each day, there will be exactly one flower blooming and it will be in the status of blooming since then.
Given an array flowers consists of number from 1 to N. Each number in the array represents the place where the flower will open in that day.</description>
    </item>
    
    <item>
      <title>Frog Jump</title>
      <link>https://ericliu03.github.io/posts/2019/05/frog_jump/</link>
      <pubDate>Wed, 01 May 2019 16:44:51 -0700</pubDate>
      
      <guid>https://ericliu03.github.io/posts/2019/05/frog_jump/</guid>
      <description>Question Leetcode 403: Frog Jump
A frog is crossing a river. The river is divided into x units and at each unit there may or may not exist a stone. The frog can jump on a stone, but it must not jump into the water.
Given a list of stones&amp;rsquo; positions (in units) in sorted ascending order, determine if the frog is able to cross the river by landing on the last stone.</description>
    </item>
    
    <item>
      <title>Escape A Large Maze</title>
      <link>https://ericliu03.github.io/posts/2019/04/escape_a_large_maze/</link>
      <pubDate>Mon, 29 Apr 2019 16:43:38 -0700</pubDate>
      
      <guid>https://ericliu03.github.io/posts/2019/04/escape_a_large_maze/</guid>
      <description>Question Leetcode 1036: Escape a Large Maze
In a 1 million by 1 million grid, the coordinates of each grid square are (x, y) with 0 &amp;lt;= x, y &amp;lt; 10^6.
We start at the source square and want to reach the target square. Each move, we can walk to a 4-directionally adjacent square in the grid that isn&amp;rsquo;t in the given list of blocked squares.
Return true if and only if it is possible to reach the target square through a sequence of moves.</description>
    </item>
    
    <item>
      <title>Uncrossed Lines</title>
      <link>https://ericliu03.github.io/posts/2019/04/uncrossed_lines/</link>
      <pubDate>Sun, 28 Apr 2019 10:46:05 -0700</pubDate>
      
      <guid>https://ericliu03.github.io/posts/2019/04/uncrossed_lines/</guid>
      <description>Question Leetcode 1035: Uncrossed Lines
We write the integers of A and B (in the order they are given) on two separate horizontal lines.
Now, we may draw a straight line connecting two numbers A[i] and B[j] as long as A[i] == B[j], and the line we draw does not intersect any other connecting (non-horizontal) line.
Return the maximum number of connecting lines we can draw in this way.</description>
    </item>
    
  </channel>
</rss>